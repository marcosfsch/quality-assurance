output {
  if [type] == "runs" {
##    if [meta][protocol] != "udp" {

       #-- To show all output to screen
        #stdout { }
        #stdout { codec => rubydebug { metadata => true } }
        # doesn't work: stdout { codec => line { format => "message: %{start}" } }

       #-- To send results to rabbitmq
       # rabbitmq {
       #     host => "localhost"
       #     exchange => "amq.direct"
       #     exchange_type => "direct"
       #     connection_timeout => 10000
       #     durable => true
       #     persistent => false
       #    # the queue to write to
       #     key => "logstash_flow_input"
       # }

       #-- To put results into elasticsearch.
       # The template file can specify data types other than int, float, and string
        elasticsearch {
            hosts => ["127.0.0.1"]
           # The elasticsearch index to write to
            #index => "results"
            index => "pscheduler-runs-%{+YYYY.MM.dd}"
	    document_id => "%{[crawler][id]}"
	    doc_as_upsert => true
    	    action => "update"

           # A template to import (this one applies to index = netsage-* only!)
            #template => "/etc/logstash/pscheduler-template.json"  ##########
        #  # Name for the imported template
            #template_name => "pscheduler-template"
        #  # Always use the most recent version of the named template
        #    template_overwrite => true
        }

##    }
  }
}
