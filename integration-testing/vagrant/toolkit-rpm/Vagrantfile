#
# Vagrantfile for perfSONAR Testbed Hosts
#

perfsonar_repo = "http://software.internet2.edu/rpms/el7/x86_64/main/RPMS/perfSONAR-repo-0.9-1.noarch.rpm"

# -*- mode: ruby -*-
# vi: set ft=ruby :

# Install vagrant-disksize to allow resizing the vagrant box disk.
unless Vagrant.has_plugin?("vagrant-disksize")
    raise  Vagrant::Errors::VagrantError.new, "vagrant-disksize plugin is missing. Please install it using 'vagrant plugin install vagrant-disksize' and rerun 'vagrant up'"
end

# Install vagrant-destroy-provisioner to allow destroying the vagrant box as a provision command.
unless Vagrant.has_plugin?("vagrant-destroy-provisioner")
    raise  Vagrant::Errors::VagrantError.new, "vagrant-destroy-provisioner plugin is missing. Please install it using 'vagrant plugin install vagrant-destroy-provisioner' and rerun 'vagrant up'"
    end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  #config.vm.box = "generic/centos7"
  config.vm.box = "centos/7"
  config.disksize.size = '20GB'

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080


  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  #config.vm.network "public_network", bridge: "en0: Wi-Fi (Wireless)"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  #config.vm.synced_folder "/Users/mj82/src/toolkit", "/home/vagrant/toolkit"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "4096"
     vb.cpus = 4
     vb.customize ["modifyvm", :id, "--audio", "none"]

  ["perfsonar-psconfig-web-admin-ui","perfsonar-psconfig-web-admin-publisher","perfsonar-tools","perfsonar-core","perfsonar-testpoint","perfsonar-centralmanagement","perfsonar-toolkit"].each do |b|
    config.vm.define "node-%s" % b do |node|

      node.vm.hostname= "node-%s" % b

      node.vm.provision "shell", inline: "/vagrant/ps_install_bundle.sh %s" % b
      node.vm.provision "destroy", destroy: true
    end
  end
end

# repos
# perfSONAR-repo.noarch : perfSONAR Repository file and package configuration
# perfSONAR-repo-extras.noarch : perfSONAR extras repository
# perfSONAR-repo-nightly-minor.noarch : perfSONAR nightly (minor version) repository
# perfSONAR-repo-nightly-patch.noarch : perfSONAR nightly (patch version) repository
# perfSONAR-repo-staging.noarch : perfSONAR staging repository
